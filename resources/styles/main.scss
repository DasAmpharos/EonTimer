@import 'variables';

// derived variables
$theme-button-border-color: desaturate(
  $color:
    darken(
      $color: $theme-button-background-color,
      $amount: 20,
    ),
  $amount: 10,
);
$theme-primary-button-border-color: desaturate(
  $color:
    darken(
      $color: $theme-primary-button-background-color,
      $amount: 20,
    ),
  $amount: 10,
);
$theme-control-border-color: desaturate(
  $color:
    darken(
      $color: $theme-control-background-color,
      $amount: 20,
    ),
  $amount: 10,
);

.themeable-panel,
QTabWidget.themeable-panel::pane {
  background-color: $theme-panel-background-color;
}

.themeable-border,
QTabWidget.themeable-border::pane {
  border: 2px solid $theme-panel-border-color;
  border-radius: 5px;
}

QScrollArea.themeable-panel {
  background-color: transparent;
}

QPushButton {
  background-color: $theme-button-background-color;
  border: 1px solid $theme-button-border-color;
  color: $theme-button-color;
  border-radius: 4px;
  padding: 3px;
  min-width: 80px;

  &:pressed {
    &:hover {
      background-color: darken(
        $color: $theme-button-background-color,
        $amount: 10
      );
      border: 2px solid $theme-focus;
    }
  }

  &:hover {
    color: lighten($color: $theme-button-color, $amount: 10);
    background-color: lighten(
      $color: $theme-button-background-color,
      $amount: 3
    );
    border-color: lighten($color: $theme-button-border-color, $amount: 3);
  }

  &:focus {
    border: 2px solid $theme-focus;
  }

  &:default {
    color: $theme-primary-button-color;
    border: 1px solid $theme-primary-button-border-color;
    background-color: $theme-primary-button-background-color;

    &:pressed {
      &:hover {
        background-color: saturate(
          $color:
            darken($color: $theme-primary-button-background-color, $amount: 10),
          $amount: 50
        );
        border: 2px solid $theme-focus;
      }
    }

    &:hover {
      color: lighten($color: $theme-primary-button-color, $amount: 10);
      background-color: lighten(
        $color: $theme-primary-button-background-color,
        $amount: 5
      );
      border-color: lighten(
        $color: $theme-primary-button-border-color,
        $amount: 5
      );
    }

    &:focus {
      border: 2px solid $theme-focus;
    }
  }
}

QComboBox {
  border-radius: 3px;
  border: 1px solid $theme-control-border-color;
  background-color: $theme-control-background-color;
  padding: 1px 18px 1px 3px;

  &::drop-down {
    subcontrol-origin: padding;
    subcontrol-position: top right;
    width: 1.25em;

    border-top-right-radius: 3px;
    border-bottom-right-radius: 3px;
    border-left: 1px solid $theme-control-border-color;
    background-color: $theme-control-background-color;
  }

  &:focus {
    border: 2px solid $theme-focus;
  }
}

QSpinBox {
  border-radius: 3px;
  border: 1px solid $theme-control-border-color;
  background-color: $theme-control-background-color;
  padding: 1px 18px 1px 3px;

  &::up-button {
    width: 16px; /* 16 + 2*1px border-width = 15px padding + 3px parent border */
    border-left: 1px solid $theme-button-border-color;
    border-bottom: 1px solid $theme-button-border-color;
    subcontrol-origin: border;
    subcontrol-position: top right; /* position at the top right corner */

    &:hover {
      border: 1px solid $theme-focus;
      border-top-right-radius: 3px;
    }

    &:pressed {
      border-image: url(:/images/spinup_pressed.png) 1;
    }
  }

  &::up-arrow {
    image: url(:/svg/caret-up.svg);
    width: 12px;
    height: 12px;

    &:off,
    &:disabled {
      /* off state when value is max */
    }
  }

  &::down-button {
    width: 16px;
    border-left: 1px solid $theme-button-border-color;
    subcontrol-origin: border;
    subcontrol-position: bottom right; /* position at bottom right corner */

    &:pressed {
      border-image: url(:/images/spindown_pressed.png) 1;
    }

    &:hover {
      border-image: url(:/images/spindown_hover.png) 1;
    }
  }

  &::down-arrow {
    image: url(:/svg/caret-down.svg);
    width: 12px;
    height: 12px;
  }

  &::off,
  &::disabled {
    /* off state when value in min */
    image: url(:/images/down_arrow_disabled.png);
  }
}
